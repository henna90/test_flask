workflows:
  version: 2
  build-deploy:
    jobs:
      - build  
      - deploy:
          requires:
            - build

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.2-stretch-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
#       parallelism: 3

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum .Environment.requirements }}
            #             - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
#           key: v1-dependencies-{{ checksum "requirements.txt" }}
          key: v1-dependencies-{{ checksum .Environment.requirements }}
          
          
      - run:
          name: install allure
          command: |
            sudo apt-add-repository ppa:qameta/allure
            sudo apt-get update 
            sudo apt-get install allure      

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            circleci tests glob "test.py" | circleci tests split --split-by=timings
            
            python3 test.py
            
            allure serve /home/circleci/repo/test-reports
           
      - store_test_results:
          path: test-reports     

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum .Environment.requirements }}
      - checkout
#       - run:
#           name: Deploy Master to Heroku
#           command: |
#             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            
      # removed deploy commands 
      
            
                        
